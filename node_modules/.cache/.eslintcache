[{"/home/ngatyah/JAVASCRIPT/redux/src/index.js":"1","/home/ngatyah/JAVASCRIPT/redux/src/App.js":"2","/home/ngatyah/JAVASCRIPT/redux/src/store/index.js":"3","/home/ngatyah/JAVASCRIPT/redux/src/components/Counter.js":"4"},{"size":279,"mtime":1624517127295,"results":"5","hashOfConfig":"6"},{"size":118,"mtime":1616596258000,"results":"7","hashOfConfig":"6"},{"size":693,"mtime":1624595069201,"results":"8","hashOfConfig":"6"},{"size":1098,"mtime":1624588951719,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"ujj0wg",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"/home/ngatyah/JAVASCRIPT/redux/src/index.js",[],["20","21"],"/home/ngatyah/JAVASCRIPT/redux/src/App.js",[],"/home/ngatyah/JAVASCRIPT/redux/src/store/index.js",[],"/home/ngatyah/JAVASCRIPT/redux/src/components/Counter.js",["22"],"import classes from './Counter.module.css';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useState } from 'react';\n\nconst Counter = () => {\n\n  const dispatch = useDispatch()\n  const counter = useSelector(state => state.counter)\n  const show = useSelector(state => state.showToggle)\n  const toggleCounterHandler = () => {\n    dispatch({ type: 'toggle' });\n  };\n\n\n  const incrementHandler = () => {\n    dispatch({ type: 'INCREMENT' });\n  }\n  const decrementHandler = () => {\n    dispatch({ type: 'DECREMENT' });\n  }\n  const increaseHandler = () => {\n    dispatch({ type: 'Increase', amount: 3 })\n  }\n\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      {show && <div className={classes.value}>{` ${counter}`}</div>}\n      <div >\n        <button onClick={incrementHandler}>Increment</button>\n        <button onClick={increaseHandler}>Custom Increase</button>\n        <button onClick={decrementHandler}>Decrement</button>\n      </div>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n\nexport default Counter;\n",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":3,"column":10,"nodeType":"29","messageId":"30","endLine":3,"endColumn":18},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]