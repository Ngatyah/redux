{"ast":null,"code":"import { configureStore, createSlice } from '@reduxjs/toolkit'; //const { createStore } = require(\"redux\");\n\nconst initialCounterState = {\n  counter: 0,\n  showToggle: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    customIncrease(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggle(state) {\n      state.showToggle = !state.showToggle;\n    }\n\n  }\n});\nconst authInitialState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: authInitialState,\n  reducers: {\n    logIn(state) {\n      state.isAuthenticated = true;\n    },\n\n    logOUt(state) {\n      state.isAuthenticated = false;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const authActions = authSlice.actions;\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"sources":["/home/ngatyah/JAVASCRIPT/redux/src/store/index.js"],"names":["configureStore","createSlice","initialCounterState","counter","showToggle","counterSlice","name","initialState","reducers","increment","state","decrement","customIncrease","action","payload","toggle","authInitialState","isAuthenticated","authSlice","logIn","logOUt","store","reducer","auth","authActions","actions","counterActions"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,WAAzB,QAA4C,kBAA5C,C,CACA;;AAGA,MAAMC,mBAAmB,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,UAAU,EAAE;AAA1B,CAA5B;AACA,MAAMC,YAAY,GAAGJ,WAAW,CAAC;AAC7BK,EAAAA,IAAI,EAAE,SADuB;AAE7BC,EAAAA,YAAY,EAAEL,mBAFe;AAG7BM,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACP,OAAN;AAEH,KAJK;;AAKNQ,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACP,OAAN;AACH,KAPK;;AAQNS,IAAAA,cAAc,CAACF,KAAD,EAAQG,MAAR,EAAgB;AAC1BH,MAAAA,KAAK,CAACP,OAAN,GAAgBO,KAAK,CAACP,OAAN,GAAgBU,MAAM,CAACC,OAAvC;AACH,KAVK;;AAWNC,IAAAA,MAAM,CAACL,KAAD,EAAQ;AACVA,MAAAA,KAAK,CAACN,UAAN,GAAmB,CAACM,KAAK,CAACN,UAA1B;AACH;;AAbK;AAHmB,CAAD,CAAhC;AAmBA,MAAMY,gBAAgB,GAAG;AAAEC,EAAAA,eAAe,EAAE;AAAnB,CAAzB;AACA,MAAMC,SAAS,GAAGjB,WAAW,CAAC;AAC1BK,EAAAA,IAAI,EAAE,MADoB;AAE1BC,EAAAA,YAAY,EAAES,gBAFY;AAG1BR,EAAAA,QAAQ,EAAE;AACNW,IAAAA,KAAK,CAACT,KAAD,EAAQ;AACTA,MAAAA,KAAK,CAACO,eAAN,GAAwB,IAAxB;AACH,KAHK;;AAING,IAAAA,MAAM,CAACV,KAAD,EAAQ;AACVA,MAAAA,KAAK,CAACO,eAAN,GAAwB,KAAxB;AACH;;AANK;AAHgB,CAAD,CAA7B;AAcA,MAAMI,KAAK,GAAGrB,cAAc,CAAC;AACzBsB,EAAAA,OAAO,EAAE;AACLnB,IAAAA,OAAO,EAAEE,YAAY,CAACiB,OADjB;AAC0BC,IAAAA,IAAI,EAAEL,SAAS,CAACI;AAD1C;AADgB,CAAD,CAA5B;AAKA,OAAO,MAAME,WAAW,GAAGN,SAAS,CAACO,OAA9B;AACP,OAAO,MAAMC,cAAc,GAAGrB,YAAY,CAACoB,OAApC;AACP,eAAeJ,KAAf","sourcesContent":["import { configureStore, createSlice } from '@reduxjs/toolkit';\n//const { createStore } = require(\"redux\");\n\n\nconst initialCounterState = { counter: 0, showToggle: true };\nconst counterSlice = createSlice({\n    name: 'counter',\n    initialState: initialCounterState,\n    reducers: {\n        increment(state) {\n            state.counter++\n\n        },\n        decrement(state) {\n            state.counter--\n        },\n        customIncrease(state, action) {\n            state.counter = state.counter + action.payload\n        },\n        toggle(state) {\n            state.showToggle = !state.showToggle;\n        }\n    }\n});\nconst authInitialState = { isAuthenticated: false }\nconst authSlice = createSlice({\n    name: 'auth',\n    initialState: authInitialState,\n    reducers: {\n        logIn(state) {\n            state.isAuthenticated = true;\n        },\n        logOUt(state) {\n            state.isAuthenticated = false;\n        }\n    }\n});\n\n\nconst store = configureStore({\n    reducer: {\n        counter: counterSlice.reducer, auth: authSlice.reducer\n    }\n});\nexport const authActions = authSlice.actions;\nexport const counterActions = counterSlice.actions;\nexport default store;"]},"metadata":{},"sourceType":"module"}